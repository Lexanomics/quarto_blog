{
  "hash": "75bb182179b8cac991789216b71beaf1",
  "result": {
    "markdown": "---\ntitle: \"Data interoperability for single-cell analysis\"\nauthor: \"Lexanomics\"\ndate: \"2024-03-07\"\nexecute:\n    warning: false\ncategories: [debbuging new]\n---\n\n\n# Interoperability on Seurat V5\n\nSeurat is undoubtedly the most used package for single-cell analysis.  However, the single-cell field has changed towards new programming languages and packages (e.g., Scanpy), which leads to an issue regarding **interoperability\n**, i.e., the ability of software to exchange and make use of information. Here, we show how to quickly convert Seurat objects from ongoing projects to AnnData (Scanpy data object).\n\n## 1. Loading requirements\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(Seurat)\nlibrary(dplyr)\nlibrary(sceasy)\n\n# Setting Assay version 5\noptions(Seurat.object.assay.version = \"v5\")\n\n# Load the PBMC dataset - available at 10x datasets website\npbmc.data <- Read10X(\n    data.dir = \"/Users/affaustino/Projects/UTILS/quarto_blog/data/filtered_gene_bc_matrices/hg19\")\n\n# Initialize the Seurat object with the raw (non-normalized data).\npbmc_seurat <- CreateSeuratObject(\n  counts = pbmc.data, project = \"pbmc3k\", min.cells = 3, min.features = 200)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# The [[ operator can add columns to object metadata. This is a great place to stash QC stats\npbmc_seurat[[\"percent_mt\"]] <- PercentageFeatureSet(pbmc_seurat, pattern = \"^MT-\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npbmc_seurat <- pbmc_seurat %>%\n  NormalizeData(normalization.method = \"LogNormalize\", scale.factor = 10000) %>%\n  FindVariableFeatures(selection.method = \"vst\", nfeatures = 2000) %>%\n  ScaleData()\n```\n:::\n\n\n## 2. Inspecting object\n\nOnce we have the Seurat object, we can quickly inspect its structure. Why should we do it? For education, it is nice to understand what slots will be kept over the conversion process.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npbmc_seurat\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAn object of class Seurat \n13714 features across 2700 samples within 1 assay \nActive assay: RNA (13714 features, 2000 variable features)\n 3 layers present: counts, data, scale.data\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npbmc_seurat@assays\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$RNA\nAssay (v5) data with 13714 features for 2700 cells\nTop 10 variable features:\n ISG15, CPSF3L, MRPL20, ATAD3C, C1orf86, RER1, RP3-395M20.9, LRRC47,\nGPR153, TNFRSF25 \nLayers:\n counts, data, scale.data \n```\n:::\n:::\n\n\n## 3. Converting to SingleCellExperiment\n\nIn our experience, the `SingleCellExperiment` object works as an intermediate layer between Seurat and AnnData. Therefore, it will ensure that most of the data is maintained among formats.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npbmc_sce <- as.SingleCellExperiment(\n    pbmc_seurat)\n```\n:::\n\n\n## 4. Saving as AnnData\n\nFinally, we will use **sceasy** for converting `SingleCellExperiment` to `Anndata`. sceasy is a package that helps easily convert different single-cell data formats to each other. Converting to AnnData creates a file that can be directly used in cellxgene which is an interactive explorer for single-cell transcriptomics datasets.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconvertFormat(pbmc_sce, from=\"sce\", to=\"anndata\",\n                       outFile='/Users/affaustino/Projects/UTILS/quarto_blog/data/pbmc.h5ad')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnnData object with n_obs × n_vars = 2700 × 13714\n    obs: 'nCount_RNA', 'nFeature_RNA', 'percent_mt'\n    var: 'name'\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}