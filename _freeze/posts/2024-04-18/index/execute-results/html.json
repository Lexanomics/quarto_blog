{
  "hash": "3507b9f6be6282810494a890208a5e7e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"How much does it cost a Bioinformatician? - Asking ChatGPT\"\nauthor: \"Diego M. Coelho\"\ndate: \"2024-04-18\"\nfreeze: auto\nexecute:\n  eval: false\ncategories: [bioinformatics]\n---\n\n```{=html}\n<style>\nbody {\ntext-align: justify}\n</style>\n```\n\n\nSome time ago, I became curious about the gross salary range for bioinformaticians across various countries in Europe and North America. While browsing through platforms like Glassdoor and Indeed seemed exhaustive, I opted to try ChatGPT for insights. After obtaining data from ChatGPT, I chose to convert the yearly gross salary into a month rate, considering a standard work year of 12 months. After this was just some plotting with ggplot2. These are the results I discovered.\n\n![Fig 1. Average Bioinformatician salaries among countries in Europe / North America normalized (USD/month). Salary lines are divided in max (green), average (red) and min (blue). I have also included a yellow dashed line to indicate overall average.](Bioinfo_USD_h.png)\n\nChatGPT have found an overall average of **~4250 USD/ month** (Annualy: 51000 USD or 26 USD/h). This does not take into account bonuses and benefits.\n\nAlso asked same for software developer, post doctoral position and data analyst.\n\n![Fig 2. Average Post Doctoral salaries among countries in Europe / North America normalized (USD/month). Same as fig 1.](PostDoc_USD_h.png)\n\n![Fig 3. Average Software Developer salaries among countries in Europe / North America normalized (USD/month). Same as fig 1.](Soft_USD_h.png)\n\n![Fig 4. Average Data Analyst salaries among countries in Europe / North America normalized (USD/month). Same as fig 1.](DA_USD_h.png)\n\nThose plots might not be a full picture but give us a hint of how Bioinformatics is doing in IT world.\n\nIf you are also interested in how I did this plot, you can find it below:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\n\nplot_salary <- function(data_file, prof){\n    tab = read.csv(data_file, header = T)\n    tab = tab %>% pivot_longer(names_to = \"Salary\", values_to = \"value\", cols = 3:5)\n    img = tab %>% \n        ggplot(aes(x = reorder(Country, value), y = value / 12)) + \n        geom_point() +\n        geom_smooth(aes(x = as.numeric(as.factor(reorder(Country, value))), color = Salary), se = F) +\n        geom_hline(yintercept = mean(tab$value) / 12, colour = \"orange\", linetype = \"longdash\") +\n        ylim(0, 12000) +\n        theme_classic() + labs(y=\"USD / month (Gross Salary)\", x = \"Countries\",\n                                title = prof) +\n        theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),\n                axis.title = element_text(size = 20),\n                title = element_text(size = 20),\n                legend.position = \"none\")\n    print(mean(tab$value/12))\n    return(img)\n}\n\n\n\n# This is how table would look like:\n# Country,Title,Min Salary (USD),Avg Salary (USD),Max Salary (USD)\n# United Kingdom,Postdoc,32000,42000,52000\n# Germany,Postdoc,38000,48000,58000\n# France,Postdoc,33000,43000,53000\n# ....\n\nbioinfo_file <- \"../../data/salaries_bioinfo_table.csv\"\npng(filename = \"Bioinfo_USD_h.png\", res = 300, width = 3000, height = 2000)\nplot_salary(bioinfo_file, \"Bioinfoinformatician\")\ndev.off()\n\npostdoc_file <- \"../../data/salaries_post_table.csv\"\npng(filename = \"PostDoc_USD_h.png\", res = 300, width = 3000, height = 2000)\nplot_salary(postdoc_file, \"Postdoc\")\ndev.off()\n\nsoft_file <- \"../../data/salaries_sd_table.csv\"\npng(filename = \"Soft_USD_h.png\", res = 300, width = 3000, height = 2000)\nplot_salary(soft_file, \"Software Developer\")\ndev.off()\n\nsoft_file <- \"../../data/salaries_da_table.csv\"\npng(filename = \"DA_USD_h.png\", res = 300, width = 3000, height = 2000)\nplot_salary(soft_file, \"Data Analyst\")\ndev.off()\n```\n:::\n\n::: {.cell}\n\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}